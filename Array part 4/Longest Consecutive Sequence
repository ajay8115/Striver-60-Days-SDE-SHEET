#include <bits/stdc++.h>
#define ll long long int
#define ld long double
#define forn for (int i = 0; i < n; i++)
#define srt(v) sort(v.begin(), v.end());
#define rev(v) reverse(v.begin(), v.end());
#define kk '\n'
using namespace std;


// Approach 1
int lengthOfLongestConsecutiveSequence(vector<int> &a, int n)
{
    if (n == 1)
    { 
        return 1;
    }

    srt(a);

    a.erase(unique(a.begin(), a.end()), a.end());

    int maxi = 0;
    int cnt = 1;

    for (int i = 1; i < n; i++)
    {
        if (a[i] - a[i - 1] != 1)
        {
            cnt = 1;
        }
        else if (a[i] - a[i - 1] == 1)
        {
            cnt++;
        } 

        maxi = max(maxi, cnt);
    } 
    return maxi;
}

// Approach 2
class Solution
{
public:
    int longestConsecutive(vector<int> &nums)
    {
        set<int> s;
        for (auto num : nums)
        {
            s.insert(num);
        }

        int max_streak = 0;

        for (auto num : nums)
        {
            if (!s.count(num - 1))
            {
                int cur_num = num;
                int cur_streak = 1;

                while (s.count(cur_num + 1))
                {
                    cur_num += 1;
                    cur_streak += 1;
                }

                max_streak = max(max_streak, cur_streak);
            }
        }

        return max_streak;
    }
};
