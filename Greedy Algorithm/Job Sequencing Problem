#include <bits/stdc++.h>

static bool cmp(vector<int> a, vector<int> b)
{ 
    return (a[1] > b[1]);
}
int jobScheduling(vector<vector<int>> &jobs)
{ 
     int n = jobs.size();
    sort(jobs.begin(), jobs.end(), cmp);
   
    int max_dead = jobs[0][0];
    for (int i = 0; i < n; i++)
    {
        max_dead = max(max_dead, jobs[i][0]);
    }
    int slot[max_dead + 1];
    for (int i = 0; i <= max_dead; i++)
    {
        slot[i] = -1;
    }

    int profit = 0, count = 0;
    for (int i = 0; i < n; i++)
    {
        for (int j = jobs[i][0]; j > 0; j--)
        {
            if (slot[j] == -1)
            {
                profit = profit + jobs[i][1];
                count++;
                slot[j] = i;
                break;
            }
        }
    }
    return profit;
}
