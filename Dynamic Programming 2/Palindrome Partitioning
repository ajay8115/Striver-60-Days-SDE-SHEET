#include <bits/stdc++.h>

bool isPalin(int i, int j, string s)
{
    while (i < j)
    {
        if (s[i] != s[j])
        {
            return false;
        }
        else
        {
            i++;
            j--;
        }
    }

    return true;
}

int fun(int i, int n, string str, vector<int> &dp)
{
    if (i == n)
    {
        return 0;
    }

    if (dp[i] != -1)
    {
        return dp[i];
    }

    int min_cost = INT_MAX;

    for (int j = i; j < n; j++)
    {
        if (isPalin(i, j, str) == true)
        {
            int cost = 1 + fun(j + 1, n, str, dp);

            min_cost = min(min_cost, cost);
        }
    }

    return dp[i] = min_cost;
}

int palindromePartitioning(string str)
{
    int n = str.size();

    vector<int> dp(n, -1);

    return fun(0, n, str, dp) - 1;
}
