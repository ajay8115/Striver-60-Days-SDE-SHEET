#include <bits/stdc++.h>

bool isvalid(int x, int y, int n, int m)
    {
        if (x >= 0 and y >= 0 and x < n and y < m)
        {
            return true;
        }
        return false;
    }
    int minTimeToRot(vector<vector<int>> &a, int n, int m)
    {

        vector<int> dir = {-1, 0, 1, 0, -1};

        // int n = a.size(), m = a[0].size();

        queue<pair<int, int>> q;
        int fresh = 0;
        for (int i = 0; i < n; i++)
        {
            for (int j = 0; j < m; j++)
            {
                if (a[i][j] == 2)
                {
                    q.push({i, j});
                }
                if (a[i][j] == 1)
                {
                    fresh++;
                }
            }
        }

        int time = -1;

        while (!q.empty())
        {
            int size = q.size();
            while (size--)
            {
                auto cur = q.front();
                q.pop();
                for (int i = 0; i < dir.size() - 1; i++)
                {
                    int x = cur.first + dir[i];
                    int y = cur.second + dir[i + 1];
                    if (isvalid(x, y, n, m) and a[x][y] == 1)
                    {
                        a[x][y] = 2;
                        q.push({x, y});
                        fresh--;
                    }
                }
            }
            time++;
        }

        if (fresh > 0)
        {
            return -1;
        }
        if (time == -1)
        {
            return 0;
        }

        return time;
    }
