#include <bits/stdc++.h>
#define ll long long int
#define ld long double
#define forn for (int i = 0; i < n; i++)
#define srt(v) sort(v.begin(), v.end());
#define rev(v) reverse(v.begin(), v.end());
#define kk '\n'
using namespace std;
template <typename T = int>

class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T data)
    {
        this->data = data;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

bool getPath(TreeNode<int> *root, vector<int> &ans, int x)
{
    if (root == NULL)
    {
        return false;
    }

    ans.push_back(root->data);

    if (root->data == x)
    {
        return true;
    }

    if (getPath(root->left, ans, x) or getPath(root->right, ans, x))
    {
        return true;
    }

    ans.pop_back();

    return false;
}
vector<int> pathInATree(TreeNode<int> *root, int x)
{
    vector<int> ans;
    if (root->data == x)
    {
        ans.push_back(x);
        return ans;
    }

    getPath(root, ans, x);

    return ans;
}
